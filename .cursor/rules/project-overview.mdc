---
description: 
globs: 
alwaysApply: false
---
# Gnostic 项目概览

**gnostic** 是一个 Go 语言的命令行工具，其核心功能是在 [OpenAPI](mdc:https:/github.com/OAI/OpenAPI-Specification) 描述 (JSON 或 YAML 格式) 与等效的 Protocol Buffer 表示之间进行转换。

## 核心功能

- **读取 OpenAPI 描述**: 解析 JSON 或 YAML 格式的 OpenAPI 文档。
- **错误报告**: 验证 OpenAPI 文档并报告发现的任何错误。
- **依赖解析**: 解析 OpenAPI 文档内部的引用和依赖关系。
- **Protocol Buffer 输出**: 将 OpenAPI 描述编译成二进制的 Protocol Buffer 格式。这种格式可以被任何支持 Protocol Buffer 的语言使用。
- **插件支持**: 提供一个插件接口，简化与用不同语言编写的 API 工具的集成。
- **格式转换**: 可以将 Protocol Buffer 表示的 OpenAPI 描述重新导出为 JSON 或 YAML 格式。

## 主要目标

通过使用 Protocol Buffer 来表示 OpenAPI 规范，`gnostic` 使得开发人员能够以类型安全的方式处理 OpenAPI 描述。这对于强类型语言 (如 Go 和 Dart) 尤其有用。

## 相关仓库

- [google/gnostic-models](mdc:https:/github.com/google/gnostic-models): 包含本项目生成的 protobuf 模型的轻量级分发。适用于仅需要模型而不需要 `gnostic` 完整功能的 Go 项目。
- [google/gnostic-grpc](mdc:https:/github.com/google/gnostic-grpc): 一个 `gnostic` 插件，可以生成一个带有注解的 Protocol Buffer 描述，该描述在转码后能产生一个符合指定 OpenAPI 文档的 API。
- [google/gnostic-go-generator](mdc:https:/github.com/google/gnostic-go-generator): 一个实验性的 `gnostic` 插件，用于为指定 OpenAPI 文档描述的 API 生成 Go 语言客户端。

## 主要源文件

- [gnostic.go](mdc:gnostic.go): 项目的主要入口点或核心逻辑。
